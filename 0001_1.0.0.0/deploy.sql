---------------------------------------------------------------------
-- DbProject - Release Script
---------------------------------------------------------------------
-- Version:					1.0.0.0
-- Generated date:			24/06/2013
-- Generated on:			DESKTOP0317
-- Generated by:			mball
--
-- IMPORTANT! 
-- Before executing this script, you should really take a backup of 
-- the target database.
---------------------------------------------------------------------

SET IMPLICIT_TRANSACTIONS, NUMERIC_ROUNDABORT OFF;
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, NOCOUNT, QUOTED_IDENTIFIER ON;
SET XACT_ABORT ON;


---------------------------------------------------------------------
-- 0001_create_table_Customer.sql
---------------------------------------------------------------------
GO

CREATE TABLE [dbo].[Customer]
(
	[CustomerId]		[int]				IDENTITY(1,1) NOT FOR REPLICATION,
	[FullName]			[nvarchar](100)		NOT NULL,
	[DateCreatedUTC]	[datetime]			NOT NULL,

	CONSTRAINT [PK_Customer] PRIMARY KEY CLUSTERED
	(
		[CustomerId] 						ASC
	)
)
GO


---------------------------------------------------------------------
-- 0002_create_view_v_Customer.sql
---------------------------------------------------------------------
GO

CREATE VIEW [dbo].[v_Customer]
AS

SELECT	[CustomerID],
		[FullName],
		[DateCreatedUTC]
FROM	[dbo].[Customer]
GO	


---------------------------------------------------------------------
-- 0003_create_procedure_up_Customer_Insert.sql
---------------------------------------------------------------------
GO

CREATE PROCEDURE [dbo].[up_Customer_Insert]
(
	@FullName			[nvarchar](100)
)
AS

BEGIN TRY
	BEGIN TRANSACTION trans_Customer_Insert

	IF (@FullName IS NULL OR LTRIM(@FullName) = '')
		BEGIN
		RAISERROR('@FullName cannot be null or empty.', 16, 1)
		END

	INSERT INTO [dbo].[Customer]
	(
		[FullName],
		[DateCreatedUTC]
	)
	VALUES
	(
		@FullName,
		GETUTCDATE()
	)

	COMMIT TRANSACTION trans_Customer_Insert

	SELECT	SCOPE_IDENTITY() AS [CustomerId]
END TRY

BEGIN CATCH
	
	ROLLBACK TRANSACTION trans_Customer_Insert
	
	SELECT	ERROR_NUMBER(), 
			ERROR_SEVERITY(), 
			ERROR_STATE(), 
			ERROR_PROCEDURE(),
			ERROR_MESSAGE()

END CATCH
GO



SET NOEXEC OFF;