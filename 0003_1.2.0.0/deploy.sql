---------------------------------------------------------------------
-- DbProject - Release Script
---------------------------------------------------------------------
-- Version:					1.2.0.0
-- Generated date:			25/06/2013
-- Generated on:			DESKTOP0317
-- Generated by:			mball
--
-- IMPORTANT! 
-- Before executing this script, you should really take a backup of 
-- the target database.
---------------------------------------------------------------------

SET IMPLICIT_TRANSACTIONS, NUMERIC_ROUNDABORT OFF;
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, NOCOUNT, QUOTED_IDENTIFIER ON;
GO
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;
SET XACT_ABORT ON;

BEGIN TRY
BEGIN TRANSACTION trans_Deployment;





---------------------------------------------------------------------
-- 0001_create_procedure_up_Product_Insert.sql
---------------------------------------------------------------------
GO

CREATE PROCEDURE [dbo].[up_Product_Insert]
(
	@ProductName			[nvarchar](100),
	@UnitPrice			[decimal](12,2)
)
AS

BEGIN TRY
	BEGIN TRANSACTION trans_Product_Insert

	IF (@ProductName IS NULL OR LTRIM(@ProductName) = '')
		BEGIN
		RAISERROR('@ProductName cannot be null or empty.', 16, 1)
		END

	INSERT INTO [dbo].[Product]
	(
		[ProductName],
		[UnitPrice]
	)
	VALUES
	(
		@ProductName,
		@UnitPrice
	)

	COMMIT TRANSACTION trans_Product_Insert

	SELECT	SCOPE_IDENTITY() AS [ProductId]
END TRY

BEGIN CATCH
	
	ROLLBACK TRANSACTION trans_Product_Insert
	
	SELECT		ERROR_NUMBER(), 
			ERROR_SEVERITY(), 
			ERROR_STATE(), 
			ERROR_PROCEDURE(),
			ERROR_MESSAGE()

END CATCH
GO

EXEC [dbo].[up_DeploymentLog_Insert] 'DbProject-1.2.0.0', '0001_create_procedure_up_Product_Insert.sql', 'SUCCESS', '0001_create_procedure_up_Product_Insert.sql was deployed successfully', SYSTEM_USER

---------------------------------------------------------------------





GO
COMMIT TRANSACTION trans_Deployment;

EXEC [dbo].[up_Deployment_Insert] 'DbProject-1.2.0.0', 'deploy.sql', 'N/A'

END TRY
BEGIN CATCH

ROLLBACK TRANSACTION trans_Deployment;

SELECT ERROR_NUMBER() AS [ErrorNumber], ERROR_SEVERITY() AS [ErrorSeverity], ERROR_STATE() AS [ErrorState], ERROR_MESSAGE() AS [ErrorMessage]

END CATCH

SET NOEXEC OFF;